*******************************
**BEGIN BW-HeatPump.dck
*******************************
    
*****************************************
** Contact person : D. Carbonell   
** Creation date  : 30.09.2016 
** Last changes   : 07.03.2022
*****************************************

***************************************************************************
** Description: 
** heat pump base ddck for model 977
** TODO: remove pump consumption calculations
***************************************************************************

***********************************
** inputs from hydraulic solver
***********************************
EQUATIONS 4
ThpEvapIn = @temp(evaporatorInput, TPiHpEvapIn)   
MfrEvapIn = ABS(@mfr(evaporatorInput, MfrPuHpEvap))     
THpCondIn = @temp(condenserInput, TPiHpCondIn)      
MfrCondIn = ABS(@mfr(condenserInput, MfrPiHpCondIn))

***********************************
** outputs to hydraulic solver
***********************************
EQUATIONS 2
THpEvapOut = [162,1]
THpCondOut = [162,3]		! Temperature of the condenser (heat sink) outlet

******************************************************************************************
** outputs to energy balance in kWh
** Following this naming standard : qSysIn_name, qSysOut_name, elSysIn_name, elSysOut_name
******************************************************************************************
EQUATIONS 1
elSysIn_Q_HpCompD = PelAuxComp_kW

*************************************************************************************************
** Dependencies with other types
** If only one dependency defined here. 
** If a variable is used more than once, redefine it here, e.g. varUsedInside=varFromAnotherDeck
*************************************************************************************************
EQUATIONS 1
myHpIsOn = hpIsOn		! control signal for the heat pump

***********************************
** outputs to other ddck
***********************************
EQUATIONS 1
MfrHpPD = MfrHpPDNew*relaxMfrHpPD + (1-relaxMfrHpPD)*MfrHpPDRc

**********************************************
** Dependencies with overall variables 
**
**check
**********************************************

***********************************
** Type
***********************************
CONSTANTS 5		! Heat Pump: Size              
sizeHpUsed = sizeHpNom						! change this to scale the heat pump   
SizeHpRatio = sizeHpUsed/sizeHpNom               
MfrHpEvapNom = SizeHpRatio*MfrHpEvapRef
MfrHpCondNom = SizeHpRatio*MfrHpCondRef		! adapt cond to corrected evap MfrHpEvapNom*ratioCondEvap                                     !  
timeHpBlock = 5

CONSTANTS 5
Moloss=0     
Ctherm=4		!1     
Ualoss=0     
frCOP=1     
frCond=1

*************************************
** Begin PD CONTROLLER
** 
*************************************
CONSTANTS 5
MfrHpCondMin = MfrHpCondNom*0.4		! chosen without any knowledge of actual system
MfrHpCondMax = MfrHpCondNom			! chosen without any knowledge of actual system
dMfrHpCondInc = 4*MfrHpCondNom
dMfrHpCondDec = -dMfrHpCondInc
dtSetHp = 5

EQUATIONS 1
dTProHpPID = HpIsOn*(THpCondOut-THpCondIn)+NOT(HpIsOn)*5

! CONTROL OF ASHP MASSFLOW. 
UNIT 157 TYPE 889		! Adapted PD-controller
PARAMETERS 9     
1					! 1: mode of timesteps: 1= use previous value, 0 = use current value
MfrHpCondMin		! 2: lowest possible output value
MfrHpCondMax		! 3: highest possible output value
-1					! 4: mode of action: 1 = positive, (increase in manipulated value causes increase in process variable), -1 = negative
MfrHpCondNom		! 5: By how much shall the manipulated variable be changed per hour if the process variable is 1 unit off?
4					! 6: A high value for D counteracts overshoot / counteracts high rates of increase or decrease in the process variable.
120					! 7: maximum rate of setpoint change per hour
dMfrHpCondInc		! 8: maximum rate of increase of the manipulated variable (positive value)
dMfrHpCondDec		! 9: maximum rate of decrease of the manipulated variable (negative value)
INPUTS 5     
dTProHpPID		! 1: process variable
dtSetHp			! 2: setpoint
Nix				! 3: freeze manipulated variable (1) or let act (0)
Nix				! 4: Manual (1) or automatic (0) manipulated variable
Nix				! 5: manual manipulated variable
*** INITIAL INPUT VALUES     
0.0   0.0   0.0   0.0    0.0     
*** OUTUPUTS     
** 1: manipulated variable, 2: current setpoint, 3: current deviation      
      
EQUATIONS 5		! ASHP ON-Signal and mass flow
MfrHpPDNew = [157,1]     
SETPHPPD = [157,2]     
DevHPPD = [157,3]    
MfrPuHpPD = HpIsOn*MfrHpPD   
relaxMfrHpPD = 1     

CONSTANTS 6
tauWPstart = 10
tauWPstop = 20
TWPEvapIce = -100
EtaDefrost = 0.4
PelWPVen = 0
PelAuxCtr_kW = 0

EQUATIONS 1
tAmbHp = 15

UNIT 162 TYPE 977		! Compression Heat Pump Model v401
PARAMETERS 28     
CHPM_c1				! 1: c1
CHPM_c2				! 2: c2
CHPM_c3				! 3: c3
CHPM_c4				! 4: c4
CHPM_c5				! 5: c5
CHPM_c6				! 6: c6
COP_c1				! 7: cop1
COP_c2				! 8: cop2
COP_c3				! 9: cop3
COP_c4				! 10: cop4
COP_c5				! 11: cop5
COP_c6				! 12: cop6
tauWPstart			! 13: tau_start, s
tauWPstop			! 14: tau_stop, s
TWPEvapIce			! 15: tevapIce, �C
EtaDefrost			! 16: eta_defrost, -
PelWPVen			! 17: ventilator electricity consumption, kW
PelAuxCtr_kW		! 18: controller electricity consumption, kW
TminEvapTout		! 19: tevap,min, �C
TEvapMaxHp			! 20: tevap,max, �C
0					! 21: tcond,min, �C
tCondMaxHp			! 22: tcond,max, �C
CpEvap				! 23: cp,evap, kJ/kgK
CpWat				! 24: cp,cond, kJ/kgK
timeHpBlock			! 25: tau_error, hr
Moloss				! 26: 0-3
Ctherm				! 27: kJ/K
Ualoss				! 28: W/k
INPUTS 9     
ThpEvapIn		! 1: tevap,in, �C
MfrEvapIn		! 2: Mfr,evap,in, kg/h
THpCondIn		! 3: tcond,in, �C
MfrCondIn		! DC LET IS AS IT WAS BEFORE (CHECK) MfrHpCond		! 4: Mfr,cond,in, kg/h
myHpIsOn		! 5: gamma_ON, -
RHamb_1			! 6: RH_air_in
tAmbHp			! 7
frCond			! 8
frCOP			! 9
0  0  0  0  0  0.5 21 1 1     
    
EQUATIONS 11		! Heat Pump: Outputs
MfrAuxEvapOut = [162,2]					! mass flow rate of evaporator outlet
HpIsBlock = BrineTooColdTimer			! OR([162,18],BrineTooColdTimer)     
BrineTooCold = OR(LT(THpEvapIn,TMinEvapTin),(LT(THpEvapOut,TMinEvapTout)))
MfrAuxOut = [162,4]*NOT(HpIsBlock)		! Mass flow rate of the condenser (heat sink) outlet
PelAuxComp_kW = [162,5]					! electricity consumption of compressor, kW
PelAuxTot_kW = [162,6]					! electricity consumption total, kW
PauxEvap_kW = [162,7]
PauxCond_kW = [162,8]					! Heat output condenser, kW
COPAux = [162,9] 
PAuxLossStart_kW = [162,10]				! Start losses, kW
PAuxDefrost_kW = [162,11]				! Defrosting losses, kW   

UNIT 163 TYPE 817		! Timer or time delay FIXED TO 5 VARIABLES. WE CAN'T CHANGE IT !!
PARAMETERS 10    
1				! 1: mode of timer 1: 1= from first trigger on; 2 = from last trigger on
timeHpBlock		! 2: lenght of time for timer 1 [h]
0				! 3: mode of timer 2: 1= from first trigger on; 2 = from last trigger on
0				! 4: lenght of time for timer 2 [h]
0				! 5: mode of timer 3: 1= from first trigger on; 2 = from last trigger on
0				! 6: lenght of time for timer 3 [h]
0				! 7: mode of timer 4: 1= from first trigger on; 2 = from last trigger on
0				! 8: lenght of time for timer 4 [h]
0
0
INPUTS 5    
BrineTooCold Nix  Nix  Nix Nix
0.0 0.0 0.0 0.0 0.0

EQUATIONS 1
BrineTooColdTimer = [163,1]

UNIT 82 TYPE 993		! Input value recall (element RcA) DC CHANGED
PARAMETERS 1     
4		! 1: number of variables to be remembered
INPUTS 4    
HpIsBlock THpCondOut myHpIsOn MfrHpPDRc   
0 0  0  0  !0 0 0  
     
EQUATIONS 6   
BoHpStart = myHpIsOn*NOT(myHpIsOnRc)     
HpStartPerH = BoHpStart/dtsim      
HpIsBlockRc = [82,1]     
THpOutRc = [82,2]
myHpIsOnRc = [82,3]
MfrHpPDRc = [82,4]  
  
** TO BE DELETED. Pump consumption should come from GUI export 
EQUATIONS 9		! 16     
dpAuxSH_bar = 0.2															! according to MacSheep report 7.2 
PflowAuxSH_W = ((MfrAuxOut/3600)/RhoWat)*dpAuxSH_bar*100000					! required power to drive the flow, W
etaPuAuxSh = 0.35															! Assumption
PelPuAuxSH_kW = (PflowAuxSH_W/1000)/etaPuAuxSH								! required pump electric power, kW
dpAuxBrine_bar = 0.3														! assumption (pressure drop is a mix between SH- and Borehole-Loop according to MacSheep report 7.2)
PflowAuxBrine_W = ((MfrAuxEvapOut/3600)/RhoBri)*dpAuxBrine_bar*100000		! required power to drive the flow, W
etaPuAuxBrine = 0.35														! Assumption
PelPuAuxBrine_kW = (PflowAuxBrine_W/1000)/etaPuAuxBrine						! required pump electric power, kW
PelPuAuxBri_kW = GT(MfrEvapIn,0.1)*PelPuAuxBrine_kW							! GT(MfrcondIn,0.1)*PelPuAuxBrine_kW          ! naming could be better�
	 
EQUATIONS 2
dtEvap = ThpEvapIn-THpEvapOut
dtCond = THpCondOut-THpCondIn

***********************************
** Monthly printer
***********************************
CONSTANTS 1
unitPrintHp = 31

ASSIGN temp\HEAT_PUMP_MO.Prt unitPrintHp 

UNIT 32 TYPE 46      
PARAMETERS 6   
unitPrintHp		! 1: Logical unit number, -
-1				! 2: Logical unit for monthly summaries, -
1				! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
-1				! 4: Printing & integrating interval, h. -1 for monthly integration
1				! 5: Number of inputs to avoid integration, -
1				! 6: Output number to avoid integration
INPUTS 5
Time  PauxEvap_kW  PauxCond_kW  PelAuxComp_kW PelAuxTot_kW
**
Time  PauxEvap_kW  PauxCond_kW  PelAuxComp_kW PelAuxTot_kW

***********************************
** Hourly printer
***********************************
CONSTANTS 1
unitHourlyHp = 33

ASSIGN    temp\HEAT_PUMP_HR.Prt    unitHourlyHp     

UNIT 34 TYPE 46		! Printegrator Monthly Values for System
PARAMETERS 9   
unitHourlyHp		! 1: Logical unit number, -
-1					! 2: Logical unit for monthly summaries, -
1					! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
1					! 4: Printing & integrating interval, h. -1 for monthly integration
4					! 5: Number of inputs to avoid integration, -
6					! 6: Output number to avoid integration
7					! 7: Output number to avoid integration
8					! 8: Output number to avoid integration
9					! 9: Output number to avoid integration
INPUTS 9
Time  PauxEvap_kW  PauxCond_kW  PelAuxComp_kW PelAuxTot_kW ThpEvapIn THpEvapOut THpCondIn THpCondOut
**
Time  PauxEvap_kW  PauxCond_kW  PelAuxComp_kW PelAuxTot_kW ThpEvapIn THpEvapOut THpCondIn THpCondOut

UNIT 89 TYPE 65		! Online Plotter Auxiliary (Element Hp)
PARAMETERS 12     
10					! 1: Nb. of left-axis variables
10					! 2: Nb. of right-axis variables
-10					! 3: Left axis minimum
70					! 4: Left axis maximum
0					! 5: Right axis minimum
100					! 6: Right axis maximum
nPlotsPerSim		! 7: Number of plots per simulation
12					! 8: X-axis gridpoints
1					! 9: Shut off Online w/o removing
-1					! 10: Logical unit for output file
0					! 11: Output file units
0					! 12: Output file delimiter
INPUTS 20     
ThpEvapIn THpEvapOut THpCondIn THpCondOut myHpIsOn HpIsBlock Nix Nix  Nix Nix
MfrEvapIn MfrCondIn PauxEvap_kW PauxCond_kW   frCond dtEvap dtCond Nix Nix Nix
**
ThpEvapIn THpEvapOut THpCondIn THpCondOut myHpIsOn HpIsBlock Nix Nix  Nix Nix
MfrEvapIn MfrCondIn PauxEvap_kW PauxCond_kW   frCond dtEvap dtCond Nix Nix Nix
LABELS  3     
Temperatures     
massFlow_and_Heat_transf     
HP    

*******************************
**END BW-HeatPump.dck
*******************************