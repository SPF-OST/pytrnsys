?start: ddck

ddck: block+

?block: simulation_control | component_control | listing_control

?simulation_control: version | simulation | tolerances | limits
    | nan_check | overwrite_check | time_report | dfq | eqsolver | solver |
    | assign | end | equations | constants | accelerate

simulation: "SIMULATION"i tstart tend delta_t

tstart: number_or_explicit_var
tend: number_or_explicit_var
delta_t: number_or_explicit_var

tolerances: "TOLERANCES"i ("-" integration_tol "-" convergance_tol | integration_tol convergance_tol)

integration_tol: number_or_explicit_var
convergance_tol: number_or_explicit_var

limits: "LIMITS"i max_iterations_per_time_step max_warnings [trace_component_after_iterations]

max_iterations_per_time_step: positive_int_or_explicit_var
max_warnings: positive_int_or_explicit_var
trace_component_after_iterations: positive_int_or_explicit_var

nan_check: "NAN_CHECK"i bool_or_explicit_var

nan_check_value: bool_or_explicit_var

overwrite_check: "OVERWRITE_CHECK"i bool_or_explicit_var

time_report: "TIME_REPORT"i bool_or_explicit_var

dfq: "DFQ"i positive_int_or_explicit_var

eqsolver: "EQSOLVER"i positive_int_or_explicit_var

solver: "SOLVER"i positive_int_or_explicit_var [relax_factor_min relax_factor_max]

relax_factor_min: number_or_explicit_var
relax_factor_max: number_or_explicit_var

end: "END"i

?listing_control: width | list | nolist  | etrace

width: "WIDTH"i positive_int_or_explicit_var -> width

list: "LIST"i

nolist: "NOLIST"i

etrace: "ETRACE"i ton toff

ton: number_or_explicit_var
toff: number_or_explicit_var

?component_control: unit

version: "VERSION"i version_number

version_number: positive_int_or_explicit_var

accelerate: "ACCELERATE"i positive_int_or_explicit_var (positive_int_or_explicit_var "," positive_int_or_explicit_var)+

unit: header [parameters] [inputs [labels]] [trace]

header: "UNIT"i unit_number "TYPE"i type_number [header_comment]

header_comment: HEADER_COMMENT

unit_number: POSITIVE_INT

type_number: POSITIVE_INT

parameters: PARAMETERS ("0" | ((HASH| number_of_parameters) parameter+))

HASH: "#"

PARAMETERS: "parameters"i

number_of_parameters: positive_int_or_explicit_var

parameter: variable | SIGNED_NUMBER

inputs: INPUTS (HASH| number_of_inputs) input+

INPUTS: "inputs"i

number_of_inputs: positive_int_or_explicit_var

input: variable
    | SIGNED_NUMBER 
    | ("0" "," "0" | "CONST")

labels: LABELS (HASH| number_of_labels) label+

LABELS: "labels"i

label: LABEL

number_of_labels: POSITIVE_INT

constants: CONSTANTS (HASH| number_of_constants) equation+

CONSTANTS: "constants"i

number_of_constants: POSITIVE_INT

equations: EQUATIONS (HASH| number_of_equations) equation+

EQUATIONS: "equations"i

number_of_equations: POSITIVE_INT

equation: assignment_target "=" sum

trace: "TRACE"i ton toff

?assignment_target: explicit_var | computed_output_var | unreferencable_var

?sum: product
    | sum "+" product -> plus
    | sum "-" product -> minus

?product: power
    | product "*" power -> times
    | product "/" power -> divided_by

?power: atom
    | power ("^" | "**") atom -> to_power_of

?atom: NUMBER -> number
    | "-" atom -> negate
    | variable
    | output
    | "(" sum ")"
    | func_call

?number_or_explicit_var: NUMBER -> value
    | explicit_var

?positive_int_or_explicit_var: POSITIVE_INT -> value
    | explicit_var

?bool_or_explicit_var: BOOL -> value
    | explicit_var

func_call: func_name func_args -> func_call

func_args: "(" (sum ("," sum)* )? ")"

func_name: NAME

output: "[" unit_number "," output_number "]"

output_number: INT

?variable: computed_var
    | explicit_var

explicit_var: default_visibility_var
    | local_var
    | global_var

unreferencable_var: UNREFERENCABLE_NAME

local_var: ":" NAME

global_var: "$" NAME

default_visibility_var: NAME

assign: "ASSIGN"i (file_path | "\"" file_path "\"") logical_unit

file_path: FILE_PATH

logical_unit: INT | explicit_var

computed_var: PORT_PROPERTY "(" PORT_NAME [","  DEFAULT_VARIABLE_NAME ]")"

?computed_output_var: computed_output_temp_var | computed_output_energy_var

computed_output_temp_var: "@temp" "(" PORT_NAME [","  DEFAULT_VARIABLE_NAME ] ")"

computed_output_energy_var: "@energy" "(" ENERGY_DIRECTION "," ENERGY_QUALITY "," CATEGORY_OR_LOCAL ("," CATEGORY)* ")"

ENERGY_DIRECTION: "in" | "out"

ENERGY_QUALITY: "heat" | "el"

CATEGORY: /[A-za-z0-9]+/

CATEGORY_LOCAL: ":"

CATEGORY_OR_LOCAL: CATEGORY | CATEGORY_LOCAL

FILE_PATH: /[A-Za-z0-9_\-\\:\.$]+/

PORT_NAME: NAME

PORT_PROPERTY: "@" ("temp" | "revtemp" | "mfr" | "cp" | "rho")

DEFAULT_VARIABLE_NAME: NAME

NAME: /(?!(constants|equations|unit|parameters|inputs|labels|trace|assign)\s)[a-z]([a-z]|[0-9]|_)*/i

LABEL: /(?!(constants|equations|unit|parameters|inputs|labels|trace|assign)\s)("[^"]+"|[^\s\*!]+)/i

UNREFERENCABLE_NAME: /(?!(constants|equations|unit|parameters|inputs|labels|trace|assign)\s)[a-z]([a-z]|[0-9]|_|-)*/i

POSITIVE_INT: POSITIVE_DIGIT DIGIT*

POSITIVE_DIGIT: "1".."9"

BOOL: "0" | "1"

SIGNED_NUMBER: ("+"?|"-") NUMBER

COMMENT: /^\s*\*[^\n]*\n?/m | /\![^\n]*/

HEADER_COMMENT: /[^!\n]+/

%import common.INT

%import common.NUMBER

%import common.LETTER

%import common.DIGIT

%import common.WS

%ignore COMMENT

%ignore WS