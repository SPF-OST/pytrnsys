bool processParallel False
#bool avoidUser True
bool processQvsT True
#bool maxMinAvoided False
bool cleanModeLatex False
bool forceProcess  True #even if results file exist it proceess the results, otherwise it checks if it exists
bool setPrintDataForGle True
#########
int yearReadedInMonthlyFile -1
int firstMonthUsed 0     # 0=January 1=February 6=July 7=August
int reduceCpu 1
#########
string typeOfProcess "completeFolder" # "casesDefined"
#string typeOfProcess "casesDefined"

#string caseProcessed "SolarDHW"
#string pathBase "C:\Daten\OngoingProject\SolTherm2050\Simulations\SolarDHW"

string latexNames "C:\Daten\spfPackages\GIT\pytrnsys_spf\pytrnsys_spf\pycharm\SolTherm2050\latexNames.json"


string typeOfSimulation "colDHW"
#calc Fsolar_Tot = -Qdp1_Tes1_Tot/Pdhw_kW_Tot
#calc TesEff     = -Qdp1_Tes1_Tot/Qhx1_Tes1_Tot

string pathBase "C:\Daten\OngoingProject\SolTherm2050\Simulations\SolarDHW"


#calcMonthly Fsolar = Pcoll_kW/Pdhw_kW


calc Pcoll_kWhM2_Tot = Pcoll_kW_Tot/AcollAp
calc Pcoll_MWh_Tot   = Pcoll_kW_Tot/1000


stringArray results "AcollAp"  "Vol_Tes1" "Pcoll_MWh_Tot" "Pcoll_kWhM2_Tot"  "fSolar" "fSolarYear" "nSeries"  # values to be printed to json
stringArray plotHourly "Pcoll_kW"  "Pdhw_kW" "effColl"  # values to be plotted (hourly)

stringArray plotT "T10_Tes1"
