*******************************
**BEGIN ice_storage_base_printer.ddck
*******************************
    
*****************************************
** Contact person : D. Carbonell   
** Creation date  : 23.04.2018  
** Last changes   : 30.04.20, MB 
*****************************************		
***********************************			
** printer that compines values from different parts of the solar ice system			
***********************************		

EQUATIONS 11
QPcmFromCol = sumQhxkW*(ProCs)  
QColToPcm   = QColToPcmNormalOp+QDefColToPcm    
QPcmToHp    = sumQhxkW*(ProHp+proPar)     
QPcmToHpPos = MAX(QPcmToHp,0.0)     
QPcmToHpNeg = MIN(QPcmToHp,0.0)     
QPcmSerial  = sumQhxkW*(ProSeries)     
QPcmSerialNeg = MIN(QPcmSerial,0.0)     
QPcmSerialPos = MAX(QPcmSerial,0.0)         
QPcmSerialToHp    = qCoolPcm*(ProSeries)     
QPcmFromColSerial = qHeatPcm*(ProSeries)   !QColSerialToPcm = qHeatPcm*(ProSeries2+Proseries12)     
QColSerialToPcm   = qHeatPcm*(ProSeries)   

EQUATIONS 19    ! Converted values for outputs

QColToPcmNormalOp = Pcoll_KW*(ProCs)     !  Col (at source level so at col level)
QDefColToPcm      = Pcoll_KW*(ProDfCol)     !  Col (at source level so at col level)
QColSerial        = Pcoll_KW*(ProSeries)     !  Col (at source level so at col level)
QColToTes         = Pcoll_KW*(ProWs+ProPar)     
ratioColSerial    = MAX(MIN(Pcoll_KW/(qCoolPcm+Pcoll_KW+1e-30),1.0),0.0)     ! Error QhxPcm instaed of QCoolPcm 
QColToHp          = PColl_KW*ratioColSerial*(ProSeries)     
**** all this is to be improved
QPipeColLossCs    = (ProCs+ProDfCol)*(PPiColTotalLoss_kW+PPiPcmTotalLoss_kW)     
QPipeColLossWs    = (ProWs)*(PPiColTotalLoss_kW+PPiTesTotalLoss_KW)     
QColSerialToHp    = (Pcoll_KW-qHeatPcm)*(ProSeries)     
myRatioSeries     = Pcoll_KW/(PauxEvap_KW+1e-10)     
QPipeSerialFromPcm = GT(qCoolPcm,0.0)*(PPiPcmTotalLoss_kW+PPiAuxPrimaryLoss_kW*(1-myRatioSeries))*(ProSeries) !Pcm to HP in series operation     
QPipeLossColOp     = QPipeColLossCs+QPipeColLossWs+QPipeLossSerial    
QPipeLossSerial    = (PPiColTotalLoss_kW + GT(qHeatPcm,0.0)*(PPiAuxPrimaryLoss_kW+PPiPcmTotalLoss_kW) + GT(qCoolPcm,0.0)*(PPiAuxPrimaryLoss_kW)*myRatioSeries)*(ProSeries)     
************ Heat pump************
QEvapHpSerialFromCol = PauxEvap_KW*ratioColSerial*(ProSeries)     ! Do this properly
QEvapHpSerial        = PauxEvap_KW*(ProSeries)     !HP
QEvapHpSerialFromPcm = PauxEvap_KW*(1-ratioColSerial)*(ProSeries)     
QEvapHpFromPcm       = PauxEvap_KW*(ProHp+proPar)     
***************** Pipe loss
QPipeLossDf       = (ProDfWs+ProDfAux)*(PPiTesTotalLoss_KW+PPiPcmTotalLoss_kW)     
QpipeLossProHp    = (ProHp)*(PPiColTotalLoss_kW+PPiAuxPrimaryLoss_kW)
*******************************
** Monthly printers
*******************************

CONSTANTS 1
unitPrintPcm2=229

ASSIGN    temp\PCM_SOLAR_MO.Prt      unitPrintPcm2
    
UNIT 230 Type 46     ! Printegrator Monthly Values for Heat Pump
PARAMETERS 6     
unitPrintPcm2     ! 1: Logical unit number, -
-1     ! 2: Logical unit for monthly summaries, -
1     ! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
-1     ! 4: Printing & integrating interval, h. -1 for monthly integration
1     ! 5: Number of inputs to avoid integration, -
1     ! 6: Output number to avoid integration
INPUTS 19
Time MassIce QPcmToTes  QPcmFromCol    QPcmDefFromTes  QPcmDefFromCol    QPcmToHp     
QPcmSerial  QEvapHpFromPcm  QPcmFromColSerial  QPipeSerialFromPcm      QColToPcm  QDefColToPcm  qColToHp    
QColSerial  QColToTes QColSerialToHp  QPcmSerialToHp  QColSerialToPcm                     
*******     
Time MassIce QPcmToTes  QPcmFromCol    QPcmDefFromTes  QPcmDefFromCol    QPcmToHp     
QPcmSerial  QEvapHpFromPcm  QPcmFromColSerial  QPipeSerialFromPcm      QColToPcm  QDefColToPcm  qColToHp    
QColSerial  QColToTes QColSerialToHp  QPcmSerialToHp  QColSerialToPcm  


*******************************
**END IceStorage-861-Generic_Printer.ddck
*******************************
